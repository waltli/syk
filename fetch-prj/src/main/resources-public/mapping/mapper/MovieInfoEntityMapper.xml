<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MovieInfoEntityMapper">
  <resultMap id="BaseResultMap" type="com.sbolo.syk.fetch.entity.test.MovieInfoEntity">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="prn" jdbcType="VARCHAR" property="prn" />
    <result column="icon_uri" jdbcType="VARCHAR" property="iconUri" />
    <result column="poster_uri_json" jdbcType="VARCHAR" property="posterUriJson" />
    <result column="pure_name" jdbcType="VARCHAR" property="pureName" />
    <result column="another_name" jdbcType="VARCHAR" property="anotherName" />
    <result column="labels" jdbcType="VARCHAR" property="labels" />
    <result column="directors" jdbcType="VARCHAR" property="directors" />
    <result column="writers" jdbcType="VARCHAR" property="writers" />
    <result column="casts" jdbcType="VARCHAR" property="casts" />
    <result column="locations" jdbcType="VARCHAR" property="locations" />
    <result column="languages" jdbcType="VARCHAR" property="languages" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="release_time_format" jdbcType="VARCHAR" property="releaseTimeFormat" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="duration" jdbcType="VARCHAR" property="duration" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="douban_id" jdbcType="VARCHAR" property="doubanId" />
    <result column="imdb_id" jdbcType="VARCHAR" property="imdbId" />
    <result column="douban_score" jdbcType="DECIMAL" property="doubanScore" />
    <result column="imdb_score" jdbcType="DECIMAL" property="imdbScore" />
    <result column="attention_rate" jdbcType="INTEGER" property="attentionRate" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="present_season" jdbcType="INTEGER" property="presentSeason" />
    <result column="total_episode" jdbcType="INTEGER" property="totalEpisode" />
    <result column="st" jdbcType="INTEGER" property="st" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="resource_write_time" jdbcType="TIMESTAMP" property="resourceWriteTime" />
    <result column="optimal_resource_prn" jdbcType="VARCHAR" property="optimalResourcePrn" />
    <result column="count_click" jdbcType="INTEGER" property="countClick" />
    <result column="count_comment" jdbcType="INTEGER" property="countComment" />
    <result column="count_download" jdbcType="INTEGER" property="countDownload" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, prn, icon_uri, poster_uri_json, pure_name, another_name, labels, directors, writers, 
    casts, locations, languages, release_time, release_time_format, year, duration, summary, 
    douban_id, imdb_id, douban_score, imdb_score, attention_rate, category, present_season, 
    total_episode, st, create_time, update_time, resource_write_time, optimal_resource_prn, 
    count_click, count_comment, count_download
  </sql>
  <select id="selectByExample" parameterType="com.sbolo.syk.fetch.entity.test.MovieInfoEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sbolo.syk.fetch.entity.test.MovieInfoEntityExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from movie_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.sbolo.syk.fetch.entity.test.MovieInfoEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from movie_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update movie_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.prn != null">
        prn = #{record.prn,jdbcType=VARCHAR},
      </if>
      <if test="record.iconUri != null">
        icon_uri = #{record.iconUri,jdbcType=VARCHAR},
      </if>
      <if test="record.posterUriJson != null">
        poster_uri_json = #{record.posterUriJson,jdbcType=VARCHAR},
      </if>
      <if test="record.pureName != null">
        pure_name = #{record.pureName,jdbcType=VARCHAR},
      </if>
      <if test="record.anotherName != null">
        another_name = #{record.anotherName,jdbcType=VARCHAR},
      </if>
      <if test="record.labels != null">
        labels = #{record.labels,jdbcType=VARCHAR},
      </if>
      <if test="record.directors != null">
        directors = #{record.directors,jdbcType=VARCHAR},
      </if>
      <if test="record.writers != null">
        writers = #{record.writers,jdbcType=VARCHAR},
      </if>
      <if test="record.casts != null">
        casts = #{record.casts,jdbcType=VARCHAR},
      </if>
      <if test="record.locations != null">
        locations = #{record.locations,jdbcType=VARCHAR},
      </if>
      <if test="record.languages != null">
        languages = #{record.languages,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.releaseTimeFormat != null">
        release_time_format = #{record.releaseTimeFormat,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.doubanId != null">
        douban_id = #{record.doubanId,jdbcType=VARCHAR},
      </if>
      <if test="record.imdbId != null">
        imdb_id = #{record.imdbId,jdbcType=VARCHAR},
      </if>
      <if test="record.doubanScore != null">
        douban_score = #{record.doubanScore,jdbcType=DECIMAL},
      </if>
      <if test="record.imdbScore != null">
        imdb_score = #{record.imdbScore,jdbcType=DECIMAL},
      </if>
      <if test="record.attentionRate != null">
        attention_rate = #{record.attentionRate,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.presentSeason != null">
        present_season = #{record.presentSeason,jdbcType=INTEGER},
      </if>
      <if test="record.totalEpisode != null">
        total_episode = #{record.totalEpisode,jdbcType=INTEGER},
      </if>
      <if test="record.st != null">
        st = #{record.st,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resourceWriteTime != null">
        resource_write_time = #{record.resourceWriteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.optimalResourcePrn != null">
        optimal_resource_prn = #{record.optimalResourcePrn,jdbcType=VARCHAR},
      </if>
      <if test="record.countClick != null">
        count_click = #{record.countClick,jdbcType=INTEGER},
      </if>
      <if test="record.countComment != null">
        count_comment = #{record.countComment,jdbcType=INTEGER},
      </if>
      <if test="record.countDownload != null">
        count_download = #{record.countDownload,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update movie_info
    set id = #{record.id,jdbcType=BIGINT},
      prn = #{record.prn,jdbcType=VARCHAR},
      icon_uri = #{record.iconUri,jdbcType=VARCHAR},
      poster_uri_json = #{record.posterUriJson,jdbcType=VARCHAR},
      pure_name = #{record.pureName,jdbcType=VARCHAR},
      another_name = #{record.anotherName,jdbcType=VARCHAR},
      labels = #{record.labels,jdbcType=VARCHAR},
      directors = #{record.directors,jdbcType=VARCHAR},
      writers = #{record.writers,jdbcType=VARCHAR},
      casts = #{record.casts,jdbcType=VARCHAR},
      locations = #{record.locations,jdbcType=VARCHAR},
      languages = #{record.languages,jdbcType=VARCHAR},
      release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      release_time_format = #{record.releaseTimeFormat,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      douban_id = #{record.doubanId,jdbcType=VARCHAR},
      imdb_id = #{record.imdbId,jdbcType=VARCHAR},
      douban_score = #{record.doubanScore,jdbcType=DECIMAL},
      imdb_score = #{record.imdbScore,jdbcType=DECIMAL},
      attention_rate = #{record.attentionRate,jdbcType=INTEGER},
      category = #{record.category,jdbcType=INTEGER},
      present_season = #{record.presentSeason,jdbcType=INTEGER},
      total_episode = #{record.totalEpisode,jdbcType=INTEGER},
      st = #{record.st,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      resource_write_time = #{record.resourceWriteTime,jdbcType=TIMESTAMP},
      optimal_resource_prn = #{record.optimalResourcePrn,jdbcType=VARCHAR},
      count_click = #{record.countClick,jdbcType=INTEGER},
      count_comment = #{record.countComment,jdbcType=INTEGER},
      count_download = #{record.countDownload,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>