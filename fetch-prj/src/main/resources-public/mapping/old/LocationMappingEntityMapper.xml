<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sbolo.syk.fetch.dao.LocationMappingEntityMapper" >
  <resultMap id="BaseResultMap" type="com.sbolo.syk.fetch.po.LocationMappingEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="location_id" property="locationId" jdbcType="VARCHAR" />
    <result column="movie_id" property="movieId" jdbcType="VARCHAR" />
    <result column="pure_name" property="pureName" jdbcType="VARCHAR" />
    <result column="release_time" property="releaseTime" jdbcType="TIMESTAMP" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, location_id, movie_id, pure_name, release_time, location, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from location_mapping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from location_mapping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into location_mapping (location_id, movie_id, pure_name, release_time, location, create_time, update_time
      )
    values 
    <foreach collection="list" item="item" index="index" separator=",">
     (#{item.locationId,jdbcType=VARCHAR}, #{item.movieId,jdbcType=VARCHAR}, #{item.pureName,jdbcType=VARCHAR}, #{item.releaseTime,jdbcType=TIMESTAMP}, #{item.location,jdbcType=VARCHAR}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>
  
  <insert id="insert" parameterType="com.sbolo.syk.fetch.po.LocationMappingEntity" >
    insert into location_mapping (id, location_id, movie_id, 
      pure_name, release_time, location, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{locationId,jdbcType=VARCHAR}, #{movieId,jdbcType=VARCHAR}, 
      #{pureName,jdbcType=VARCHAR}, #{releaseTime,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sbolo.syk.fetch.po.LocationMappingEntity" >
    insert into location_mapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="locationId != null" >
        location_id,
      </if>
      <if test="movieId != null" >
        movie_id,
      </if>
      <if test="pureName != null" >
        pure_name,
      </if>
      <if test="releaseTime != null" >
        release_time,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="locationId != null" >
        #{locationId,jdbcType=VARCHAR},
      </if>
      <if test="movieId != null" >
        #{movieId,jdbcType=VARCHAR},
      </if>
      <if test="pureName != null" >
        #{pureName,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null" >
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sbolo.syk.fetch.po.LocationMappingEntity" >
    update location_mapping
    <set >
      <if test="locationId != null" >
        location_id = #{locationId,jdbcType=VARCHAR},
      </if>
      <if test="movieId != null" >
        movie_id = #{movieId,jdbcType=VARCHAR},
      </if>
      <if test="pureName != null" >
        pure_name = #{pureName,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null" >
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sbolo.syk.fetch.po.LocationMappingEntity" >
    update location_mapping
    set location_id = #{locationId,jdbcType=VARCHAR},
      movie_id = #{movieId,jdbcType=VARCHAR},
      pure_name = #{pureName,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>