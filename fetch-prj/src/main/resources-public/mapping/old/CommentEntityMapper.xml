<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sbolo.syk.fetch.dao.CommentEntityMapper" >
  <resultMap id="BaseResultMap" type="com.sbolo.syk.fetch.po.CommentEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="VARCHAR" />
    <result column="movie_id" property="movieId" jdbcType="VARCHAR" />
    <result column="reply_comment_id" property="replyCommentId" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="count_like" property="countLike" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, comment_id, movie_id, reply_comment_id, nick_name, content, create_time, update_time, count_like
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sbolo.syk.fetch.po.CommentEntity" >
    insert into comment (id, comment_id, movie_id, 
      reply_comment_id, nick_name, content, 
      create_time, update_time, count_like)
    values (#{id,jdbcType=INTEGER}, #{commentId,jdbcType=VARCHAR}, #{movieId,jdbcType=VARCHAR}, 
      #{replyCommentId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{countLike,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sbolo.syk.fetch.po.CommentEntity" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="movieId != null" >
        movie_id,
      </if>
      <if test="replyCommentId != null" >
        reply_comment_id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="countLike != null" >
        count_like,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="movieId != null" >
        #{movieId,jdbcType=VARCHAR},
      </if>
      <if test="replyCommentId != null" >
        #{replyCommentId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="countLike != null" >
        #{countLike,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sbolo.syk.fetch.po.CommentEntity" >
    update comment
    <set >
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="movieId != null" >
        movie_id = #{movieId,jdbcType=VARCHAR},
      </if>
      <if test="replyCommentId != null" >
        reply_comment_id = #{replyCommentId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="countLike != null" >
        count_like = #{countLike,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sbolo.syk.fetch.po.CommentEntity" >
    update comment
    set comment_id = #{commentId,jdbcType=VARCHAR},
      movie_id = #{movieId,jdbcType=VARCHAR},
      reply_comment_id = #{replyCommentId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      count_like = #{countLike,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>